/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WinnersRouteImport } from './routes/winners'
import { Route as TwitterRouteImport } from './routes/twitter'
import { Route as SolanaDemoRouteImport } from './routes/solana-demo'
import { Route as QuizGameRouteImport } from './routes/quiz-game'
import { Route as MintRouteImport } from './routes/mint'
import { Route as LandingRouteImport } from './routes/landing'
import { Route as IndexDailywiserRouteImport } from './routes/index-dailywiser'
import { Route as FarcasterRouteImport } from './routes/farcaster'
import { Route as DemoRouteImport } from './routes/demo'
import { Route as ContractRouteImport } from './routes/contract'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'

const WinnersRoute = WinnersRouteImport.update({
  id: '/winners',
  path: '/winners',
  getParentRoute: () => rootRouteImport,
} as any)
const TwitterRoute = TwitterRouteImport.update({
  id: '/twitter',
  path: '/twitter',
  getParentRoute: () => rootRouteImport,
} as any)
const SolanaDemoRoute = SolanaDemoRouteImport.update({
  id: '/solana-demo',
  path: '/solana-demo',
  getParentRoute: () => rootRouteImport,
} as any)
const QuizGameRoute = QuizGameRouteImport.update({
  id: '/quiz-game',
  path: '/quiz-game',
  getParentRoute: () => rootRouteImport,
} as any)
const MintRoute = MintRouteImport.update({
  id: '/mint',
  path: '/mint',
  getParentRoute: () => rootRouteImport,
} as any)
const LandingRoute = LandingRouteImport.update({
  id: '/landing',
  path: '/landing',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexDailywiserRoute = IndexDailywiserRouteImport.update({
  id: '/index-dailywiser',
  path: '/index-dailywiser',
  getParentRoute: () => rootRouteImport,
} as any)
const FarcasterRoute = FarcasterRouteImport.update({
  id: '/farcaster',
  path: '/farcaster',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoRoute = DemoRouteImport.update({
  id: '/demo',
  path: '/demo',
  getParentRoute: () => rootRouteImport,
} as any)
const ContractRoute = ContractRouteImport.update({
  id: '/contract',
  path: '/contract',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/contract': typeof ContractRoute
  '/demo': typeof DemoRoute
  '/farcaster': typeof FarcasterRoute
  '/index-dailywiser': typeof IndexDailywiserRoute
  '/landing': typeof LandingRoute
  '/mint': typeof MintRoute
  '/quiz-game': typeof QuizGameRoute
  '/solana-demo': typeof SolanaDemoRoute
  '/twitter': typeof TwitterRoute
  '/winners': typeof WinnersRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/contract': typeof ContractRoute
  '/demo': typeof DemoRoute
  '/farcaster': typeof FarcasterRoute
  '/index-dailywiser': typeof IndexDailywiserRoute
  '/landing': typeof LandingRoute
  '/mint': typeof MintRoute
  '/quiz-game': typeof QuizGameRoute
  '/solana-demo': typeof SolanaDemoRoute
  '/twitter': typeof TwitterRoute
  '/winners': typeof WinnersRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/contract': typeof ContractRoute
  '/demo': typeof DemoRoute
  '/farcaster': typeof FarcasterRoute
  '/index-dailywiser': typeof IndexDailywiserRoute
  '/landing': typeof LandingRoute
  '/mint': typeof MintRoute
  '/quiz-game': typeof QuizGameRoute
  '/solana-demo': typeof SolanaDemoRoute
  '/twitter': typeof TwitterRoute
  '/winners': typeof WinnersRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/contract'
    | '/demo'
    | '/farcaster'
    | '/index-dailywiser'
    | '/landing'
    | '/mint'
    | '/quiz-game'
    | '/solana-demo'
    | '/twitter'
    | '/winners'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/contract'
    | '/demo'
    | '/farcaster'
    | '/index-dailywiser'
    | '/landing'
    | '/mint'
    | '/quiz-game'
    | '/solana-demo'
    | '/twitter'
    | '/winners'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/contract'
    | '/demo'
    | '/farcaster'
    | '/index-dailywiser'
    | '/landing'
    | '/mint'
    | '/quiz-game'
    | '/solana-demo'
    | '/twitter'
    | '/winners'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  ContractRoute: typeof ContractRoute
  DemoRoute: typeof DemoRoute
  FarcasterRoute: typeof FarcasterRoute
  IndexDailywiserRoute: typeof IndexDailywiserRoute
  LandingRoute: typeof LandingRoute
  MintRoute: typeof MintRoute
  QuizGameRoute: typeof QuizGameRoute
  SolanaDemoRoute: typeof SolanaDemoRoute
  TwitterRoute: typeof TwitterRoute
  WinnersRoute: typeof WinnersRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/winners': {
      id: '/winners'
      path: '/winners'
      fullPath: '/winners'
      preLoaderRoute: typeof WinnersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/twitter': {
      id: '/twitter'
      path: '/twitter'
      fullPath: '/twitter'
      preLoaderRoute: typeof TwitterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/solana-demo': {
      id: '/solana-demo'
      path: '/solana-demo'
      fullPath: '/solana-demo'
      preLoaderRoute: typeof SolanaDemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quiz-game': {
      id: '/quiz-game'
      path: '/quiz-game'
      fullPath: '/quiz-game'
      preLoaderRoute: typeof QuizGameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mint': {
      id: '/mint'
      path: '/mint'
      fullPath: '/mint'
      preLoaderRoute: typeof MintRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/landing': {
      id: '/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/index-dailywiser': {
      id: '/index-dailywiser'
      path: '/index-dailywiser'
      fullPath: '/index-dailywiser'
      preLoaderRoute: typeof IndexDailywiserRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/farcaster': {
      id: '/farcaster'
      path: '/farcaster'
      fullPath: '/farcaster'
      preLoaderRoute: typeof FarcasterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo': {
      id: '/demo'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof DemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contract': {
      id: '/contract'
      path: '/contract'
      fullPath: '/contract'
      preLoaderRoute: typeof ContractRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  ContractRoute: ContractRoute,
  DemoRoute: DemoRoute,
  FarcasterRoute: FarcasterRoute,
  IndexDailywiserRoute: IndexDailywiserRoute,
  LandingRoute: LandingRoute,
  MintRoute: MintRoute,
  QuizGameRoute: QuizGameRoute,
  SolanaDemoRoute: SolanaDemoRoute,
  TwitterRoute: TwitterRoute,
  WinnersRoute: WinnersRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
